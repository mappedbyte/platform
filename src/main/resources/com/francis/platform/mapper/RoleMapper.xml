<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.francis.platform.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.francis.platform.entity.Role">
    <!--@mbg.generated-->
    <!--@Table t_role-->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    role_id, role_name, description, data_scope, `level`, create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_role
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="role_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="data_scope = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.dataScope,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where role_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.roleId,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update t_role
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="role_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.roleName != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.roleName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.description != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.description,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="data_scope = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.dataScope != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.dataScope,jdbcType=CHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="`level` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.level != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.level,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when role_id = #{item.roleId,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where role_id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.roleId,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="role_id" keyProperty="roleId" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_role
    (role_name, description, data_scope, `level`, create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roleName,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR}, #{item.dataScope,jdbcType=CHAR}, 
        #{item.level,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="role_id" keyProperty="roleId" parameterType="com.francis.platform.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      role_name,
      description,
      data_scope,
      `level`,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      #{roleName,jdbcType=VARCHAR},
      #{description,jdbcType=VARCHAR},
      #{dataScope,jdbcType=CHAR},
      #{level,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      role_name = #{roleName,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      data_scope = #{dataScope,jdbcType=CHAR},
      `level` = #{level,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="role_id" keyProperty="roleId" parameterType="com.francis.platform.entity.Role" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="dataScope != null">
        data_scope,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        #{dataScope,jdbcType=CHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        data_scope = #{dataScope,jdbcType=CHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>




  <resultMap id="RoleDtoResultMap" type="com.francis.platform.entity.dto.RoleDto">
    <!--@mbg.generated-->
    <!--@Table t_role-->
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="data_scope" jdbcType="CHAR" property="dataScope" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <collection column="role_id" property="menus" ofType="com.francis.platform.entity.Menu"
                select="queryMenuListByRoleId"/>
  </resultMap>


  <select id="queryList" parameterType="string" resultMap="RoleDtoResultMap">

    SELECT
            role_id,
            role_name,
            description,
            data_scope,
            `level`,
            create_time,
            update_time
    FROM
            t_role
    <where>
      <if test="roleName != null and roleName != ''">
        AND role_name =#{roleName,jdbcType=VARCHAR}
      </if>
    </where>


  </select>

  <select id="queryMenuListByRoleId"  resultType="com.francis.platform.entity.Menu" >

    SELECT
            *
    FROM
            `t_role_menu` trm
                    LEFT JOIN t_menu tm ON trm.menu_id = tm.menu_id
    WHERE
            trm.role_id =  #{role_id}

  </select>


  <select id="findById" parameterType="long" resultMap="RoleDtoResultMap">
    SELECT
    role_id,
    role_name,
    description,
    data_scope,
    `level`,
    create_time,
    update_time
    FROM
    t_role
   where  role_id =#{roleId,jdbcType=BIGINT}
  </select>


  <select id="findByUsersId"  parameterType="long" resultMap="BaseResultMap">


    SELECT
    role_id,
    role_name,
    description,
    data_scope,
    `level`,
    create_time,
    update_time
    FROM
            `t_role_user` tru
                    LEFT JOIN t_role tr ON tr.role_id = tru.role_id
    WHERE
            tru.user_id = #{userId,jdbcType=BIGINT}

  </select>


</mapper>